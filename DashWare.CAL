;last modified 2021. 03. 07. 10:22:23 by bekes    (62)

;---User Dialog-----------------------------------------------------------------

[Dialog_Camera]
Camera         = EnterChannel('Select Camera for Dashware export (e.g. Video_File_Index_2 for a video of camera 2)', #Video_file_index_1); User-interaction: Selecting Camera | #Video_File_Index_1 preselected

[Dialog_Video]                                                                  ; User-interaction: Selecting Video | Video 1 preselected
C0             = EnterValue('Select video for Dashware export (e.g. 2 for Video 2 of previously selected camera)', 1)                     ; Creating channel with number of selected video
Video          = Const(@C0, #Camera.Rate)

[Limits]
VFI_LL         =-(#Video, 0.5)                                                  ; Channels for highlighting respective Video --> LowLimit
VFI_HL         =+(#Video, 0.5)                                                  ; Channels for highlighting respective Video --> HighLimit

[Selection_Valid]
C0             = If(#Camera,  >, #VFI_LL,   1, 0)                               ; Connection between Camera And Video
Dashware_Valid = If(#Camera,  <, #VFI_HL, #C0, 0)                               ; Connection between Camera And Video  --> User-selected Video to export

[Delete]
Delete(#Camera)
Delete(#Video)
Delete(#VFI_LL)
Delete(#VFI_HL)

;---Preparing channels for export-----------------------------------------------

[CalcLapTime]
C1             = Const(1,@mainsamplingrate)                                     ; Create Laptime-constant
RunningLapTime = Integrate(#C1,0)                                               ; Integrate Laptime-constant to get Laptime | Integration is Set to 0 at each laptrigger

[ReplaceBadGPS2]

C1           = F(@gpsValid,F(avg(0.5 sec)))                                     ; Create GPSValid-Window because Lat/Lon-Values are go bad step-wise
C10          = RisingEdge(#C1)                                                  ; Detect Start of GPSValid-Window
C11          = FallingEdge(#C1)                                                 ; Detect End of GPSValid-Window

C2           = FillWithNextBool(@GPS_Latitude, #C10)                            ; Fill first and during Lat/Lon-Missings
C2           = If(#C1, =, 0, #C2, @GPS_Latitude)                                ; Fill first and during Lat/Lon-Missings
C20          = FillFromBool(@GPS_Latitude, #C11)                                ; Fill last Lat/Lon-Missings
Latitude_new = If(#C2,=, 0, #C20, #C2)                                          ; Fill last Lat/Lon-Missings

C3           = FillWithNextBool(@GPS_Longitude, #C10)                           ; Fill first and during Lat/Lon-Missings
C3           = If(#C1, =, 0, #C3, @GPS_Longitude)                               ; Fill first and during Lat/Lon-Missings
C30          = FillFromBool(@GPS_Longitude, #C11)                               ; Fill last Lat/Lon-Missings
Longitude_new= If(#C3,=, 0, #C30, #C3)                                          ; Fill last Lat/Lon-Missings

[Lat_Minutes]
IfExists(#Latitude_new)
C1            =*(#Latitude_new, 100)                                            ; e.g. 49,833 --> 4983,3
C2            = Mod(#C1, 100)                                                   ; 83,3
C3            =-(#C1, #C2)                                                      ; 4900
C4            =/(#C3, 100)                                                      ; 49
C5            =*(#C2, 60)                                                       ; 5000
C5            =/(#C5, 10000)                                                    ; 0,50
Result        =+(#C4, #C5)                                                      ; 49,50
Result        = Set(DIM='°')

[Lon_Minutes]
IfExists(#Longitude_new)
C1            =*(#Longitude_new, 100)
C2            = Mod(#C1, 100)
C3            =-(#C1, #C2)
C4            =/(#C3, 100)
C5            =*(#C2, 60)
C5            =/(#C5, 10000)
Result        =+(#C4, #C5)
Result        = Set(DIM='°')

//{$V <RaceDir>\CalFiles\ShiftLights_Settings.hed}

//[ShiftLights]
//IfExists(@Drive_RPM)
//C1            = Const(0, 25)
//C1            = If(@Drive_RPM, >, @LED1, 1, #C1)
//C1            = If(@Drive_RPM, >, @LED2, 2, #C1)
//C1            = If(@Drive_RPM, >, @LED3, 3, #C1)
//C1            = If(@Drive_RPM, >, @LED4, 4, #C1)
//C1            = If(@Drive_RPM, >, @LED5, 5, #C1)
//C1            = If(@Drive_RPM, >, @LED6, 6, #C1)
//C1            = If(@Drive_RPM, >, @LED7, 7, #C1)
//C1            = If(@Drive_RPM, >, @LED8, 8, #C1)
//Result        = Word(#C1,0,65535)
//Result        = Set(Dim = '')

