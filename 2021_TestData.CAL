;last modified 2021. 07. 20. 21:24:52 by pungorpeter    (39)

[2021_TestData]

[if]
{$IfNotExists(#E_Kinetic) 2021_Energy.CAL}

[INT_Brake]
INT_Brake_Pressure_Front=Integrate(#Brake_Pressure_Front,0)
INT_Brake_Pressure_Front=/(#INT_Brake_Pressure_Front,Parameters.CIRCUIT_LENGTH)
INT_Brake_Pressure_Front=Set(DIM='bar*s/m')

INT_Brake_Pressure_Rear=Integrate(#Brake_Pressure_Rear,0)
INT_Brake_Pressure_Rear=/(#INT_Brake_Pressure_Rear,Parameters.CIRCUIT_LENGTH)
INT_Brake_Pressure_Rear=Set(DIM='bar*s/m')

INT_Mech_vs_RegBrake=-(#Brake_Pressure_Front,30)
INT_Mech_vs_RegBrake=Integrate(#INT_Mech_vs_RegBrake,0)
INT_Mech_vs_RegBrake=/(#INT_Mech_vs_RegBrake,Parameters.CIRCUIT_LENGTH)
INT_Mech_vs_RegBrake=Set(Dim='bar*s/m)

[Coast]    //no brake force & no throttle & the car is Not standing
bool1=If(#Brake_Pressure_Front,<,20,0,1)
bool2=If(#Throttle_Position_1,<,5,0,1)
Coast=+(#bool2,#bool1)
bool3=If(#Throttle_Position_2,<,5,0,1)
Coast=+(#bool3,#Coast)
Coast=If(#Coast,=,0,0.05,0)
bool=If(#AMK_ActualVelocity_3,<,10,0,1)
Coast=*(#bool,#Coast)
Coast=*(#Coast,10000)
Delete(#bool1)
Delete(#bool2)
Delete(#bool3)
Delete(#bool)
Coast=Set(DIM='-')

[INT_Coast]
INT_Coast=Integrate(#Coast,0)
INT_Coast=/(#INT_Coast,Parameters.CIRCUIT_LENGTH)
INT_Coast=Set(Dim='s/m)

[INT_Throttle]
Throttle=+(#Throttle_Position_1,#Throttle_Position_2)
Throttle=/(#Throttle,2)
INT_Throttle=Integrate(#Throttle,0)
INT_Throttle=/(#INT_Throttle,Parameters.CIRCUIT_LENGTH)
INT_Throttle=Set(Dim='%*s/m')
Delete(#Throttle)

[INT_Brake_Force]
INT_Brake_Force=Integrate(#BrakeForce,0)
INT_Brake_Force=/(#INT_Brake_Force,Parameters.CIRCUIT_LENGTH)
INT_Brake_Force=Set(DIM='N*s/m')

[Throttle_Steering]
Throttle_Steering=+(#Throttle_Position_1,#Throttle_Position_2)
Throttle_Steering=/(#Throttle_Steering,2)
SteeringAngle_tmp=+(#Steering_Angle_1,#Steering_Angle_2)
SteeringAngle_tmp=/(#SteeringAngle_tmp,2)
SteeringAngle_tmp=Abs(#SteeringAngle_tmp)
Throttle_Steering=*(#Throttle_Steering,#SteeringAngle_tmp)
Throttle_Steering=If(#SteeringAngle_tmp,>,30,#Throttle_Steering,0)
Throttle_Steering=Set(DIM='°*%')

[INT_Throttle_Steering]

INT_Throttle_Steering=Integrate(#Throttle_Steering,0)
INT_Throttle_Steering=/(#INT_Throttle_Steering,Parameters.CIRCUIT_LENGTH)
INT_Throttle_Steering=Set(Dim='°*%*s/m)

[INT_Brake_Steering]

st1=If(#BrakeForce,>,50,1,0)
st2=Abs(#Steering_Angle_1)
st3=If(#st2,>,30,1,0)

st3=+(#st1,#st3)
st3=If(#st3,=,2,1,0)
Br_St=*(#st2,#BrakeForce)
Brake_Steering=FillFromBool(#Br_St,#st3)
INT_Brake_Steering=Integrate(#Brake_Steering,0)
INT_Brake_Steering=/(#INT_Brake_Steering,Parameters.CIRCUIT_LENGTH)
INT_Brake_Steering=Set(Dim='N*°*s/m')

Delete(#st1)
Delete(#st2)
Delete(#st3)
Delete(#Br_St)
Delete(#Brake_Steering)

[INT_M_Yaw]

INT_M_Yaw=Abs(#M_Yaw)
INT_M_Yaw=Integrate(#INT_M_Yaw,0)
INT_M_Yaw=/(#INT_M_Yaw,Parameters.CIRCUIT_LENGTH)
INT_M_Yaw=Set(Dim='Nm*s/m')

[INT Steering_Angle]

INT_Steering_Angle=Integrate(#SteeringAngle_tmp,0)
INT_Steering_Angle=/(#INT_Steering_Angle,Parameters.CIRCUIT_LENGTH)
INT_Steering_Angle=Set(DIM='°*s/m')

Delete(#SteeringAngle_tmp)

/////INT Traction
{$IfNotExists(#SlipRatio_1_Traction) 2021_SlipRatio.CAL}

[INT_SlipRatio_1_Traction]
IfExists(#SlipRatio_1_Traction)
INT_SlipRatio_1_Traction=Integrate(#SlipRatio_1_Traction,0)
INT_SlipRatio_1_Traction=/(#INT_SlipRatio_1_Traction,Parameters.CIRCUIT_LENGTH)
INT_SlipRatio_1_Traction=*(#INT_SlipRatio_1_Traction,100)
INT_SlipRatio_1_Traction=Set(Dim='s/m')

[INT_SlipRatio_2_Traction]
IfExists(#SlipRatio_2_Traction)
INT_SlipRatio_2_Traction=Integrate(#SlipRatio_2_Traction,0)
INT_SlipRatio_2_Traction=/(#INT_SlipRatio_2_Traction,Parameters.CIRCUIT_LENGTH)
INT_SlipRatio_2_Traction=*(#INT_SlipRatio_2_Traction,100)
INT_SlipRatio_2_Traction=Set(Dim='s/m')

[INT_SlipRatio_3_Traction]
IfExists(#SlipRatio_3_Traction)
INT_SlipRatio_3_Traction=Integrate(#SlipRatio_3_Traction,0)
INT_SlipRatio_3_Traction=/(#INT_SlipRatio_3_Traction,Parameters.CIRCUIT_LENGTH)
INT_SlipRatio_3_Traction=*(#INT_SlipRatio_3_Traction,100)
INT_SlipRatio_3_Traction=Set(Dim='s/m')

[INT_SlipRatio_4_Traction]
IfExists(#SlipRatio_4_Traction)
INT_SlipRatio_4_Traction=Integrate(#SlipRatio_4_Traction,0)
INT_SlipRatio_4_Traction=/(#INT_SlipRatio_4_Traction,Parameters.CIRCUIT_LENGTH)
INT_SlipRatio_4_Traction=*(#INT_SlipRatio_4_Traction,100)
INT_SlipRatio_4_Traction=Set(Dim='s/m')

/////INT Braking

[INT_SlipRatio_1_Braking]
IfExists(#SlipRatio_1_Braking)
INT_SlipRatio_1_Braking=Integrate(#SlipRatio_1_Braking,0)
INT_SlipRatio_1_Braking=/(#INT_SlipRatio_1_Braking,Parameters.CIRCUIT_LENGTH)
INT_SlipRatio_1_Braking=*(#INT_SlipRatio_1_Braking,100)
INT_SlipRatio_1_Braking=Set(Dim='s/m')

[INT_SlipRatio_2_Braking]
IfExists(#SlipRatio_2_Braking)
INT_SlipRatio_2_Braking=Integrate(#SlipRatio_2_Braking,0)
INT_SlipRatio_2_Braking=/(#INT_SlipRatio_2_Braking,Parameters.CIRCUIT_LENGTH)
INT_SlipRatio_2_Braking=*(#INT_SlipRatio_2_Braking,100)
INT_SlipRatio_2_Braking=Set(Dim='s/m')

[INT_SlipRatio_3_Braking]
IfExists(#SlipRatio_3_Braking)
INT_SlipRatio_3_Braking=Integrate(#SlipRatio_3_Braking,0)
INT_SlipRatio_3_Braking=/(#INT_SlipRatio_3_Braking,Parameters.CIRCUIT_LENGTH)
INT_SlipRatio_3_Braking=*(#INT_SlipRatio_3_Braking,100)
INT_SlipRatio_3_Braking=Set(Dim='s/m')

[INT_SlipRatio_4_Braking]
IfExists(#SlipRatio_4_Braking)
INT_SlipRatio_4_Braking=Integrate(#SlipRatio_4_Braking,0)
INT_SlipRatio_4_Braking=/(#INT_SlipRatio_4_Braking,Parameters.CIRCUIT_LENGTH)
INT_SlipRatio_4_Braking=*(#INT_SlipRatio_4_Braking,100)
INT_SlipRatio_4_Braking=Set(Dim='s/m')

[OS_US]
INT_OS_US=/(#AccY_Front_Converted,#VehicleSpeed)
INT_OS_US=*(2023.5,#INT_OS_US)                      //const=3.6*180/PI*g
INT_OS_US=/(#Yaw_Rate_Front,#INT_OS_US)
INT_OS_US=-(#INT_OS_US,1)
INT_OS_US=If(#VehicleSpeed,>,5,#INT_OS_US,0)
INT_OS_US=Limit(#INT_OS_US,-5,5)
INT_OS_US=Integrate(#INT_OS_US,0)
INT_OS_US=/(#INT_OS_US,Parameters.CIRCUIT_LENGTH)
INT_OS_US=*(#INT_OS_US,100)
INT_OS_US=Set(DIM='s/m')

[HV_Current]

INT_HV_Current=Integrate(#HV_Current,0)
INT_HV_Current=/(#INT_HV_Current,3.6)
INT_HV_Current=Set(Dim='mAh')

AVG_HV_Current=Abs(#HV_Current) //minmaxtableben avg-je

[INT_Id/iq]

{$IfNotExists(#Iq1) 2021_HV.CAL}

INT_Iq1=Abs(#Iq1)
INT_Iq1=Integrate(#INT_Iq1,0)

INT_Iq2=Abs(#Iq2)
INT_Iq2=Integrate(#INT_Iq2,0)

INT_Iq3=Abs(#Iq3)
INT_Iq3=Integrate(#INT_Iq3,0)

INT_Iq4=Abs(#Iq4)
INT_Iq4=Integrate(#INT_Iq4,0)

INT_Id1=Abs(#Id1)
INT_Id1=Integrate(#INT_Id1,0)

INT_Id2=Abs(#Id2)
INT_Id2=Integrate(#INT_Id2,0)

INT_Id3=Abs(#Id3)
INT_Id3=Integrate(#INT_Id3,0)

INT_Id4=Abs(#Id4)
INT_Id4=Integrate(#INT_Id4,0)

{$IfNotExists(#AccX_Front_Converted) gyorsulasszamolo.CAL}
{$IfNotExists(#Roll_Gradient_Rear) 2021_RegressionCaller.CAL}
